<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="libdbusmenu-gtk-DbusmenuGtkMenu">
<refmeta>
<refentrytitle role="top_of_page" id="libdbusmenu-gtk-DbusmenuGtkMenu.top_of_page">DbusmenuGtkMenu</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBDBUSMENU-GTK Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>DbusmenuGtkMenu</refname>
<refpurpose>A GTK Menu Object that syncronizes over DBus</refpurpose>
</refnamediv>
<refsect1 id="libdbusmenu-gtk-DbusmenuGtkMenu.stability-level">
<title>Stability Level</title>
Unstable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="libdbusmenu-gtk-DbusmenuGtkMenu.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#include &lt;libdbusmenu-gtk/menu.h&gt;

struct              <link linkend="DbusmenuGtkMenuClass">DbusmenuGtkMenuClass</link>;
<link linkend="DbusmenuGtkMenu"><returnvalue>DbusmenuGtkMenu</returnvalue></link> *   <link linkend="dbusmenu-gtkmenu-new">dbusmenu_gtkmenu_new</link>                (<parameter><link linkend="gchar"><type>gchar</type></link> *dbus_name</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *dbus_object</parameter>);
<link linkend="DbusmenuGtkClient"><returnvalue>DbusmenuGtkClient</returnvalue></link> * <link linkend="dbusmenu-gtkmenu-get-client">dbusmenu_gtkmenu_get_client</link>         (<parameter><link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> *menu</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libdbusmenu-gtk-DbusmenuGtkMenu.description" role="desc">
<title role="desc.title">Description</title>
<para>
In general, this is just a <link linkend="GtkMenu"><type>GtkMenu</type></link>, why else would you care?  Oh,
	because this menu is created by someone else on a server that exists
	on the other side of DBus.  You need a <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link> to be able
	push the data into this menu.
</para>
<para>
	The first thing you need to know is how to find that <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link>
	on DBus.  This involves both the DBus name and the DBus object that
	the menu interface can be found on.  Those two value should be set
	when creating the object using <link linkend="dbusmenu-gtkmenu-new"><function>dbusmenu_gtkmenu_new()</function></link>.  They are then
	stored on two properties <link linkend="DbusmenuGtkMenu--dbus-name"><type>"dbus-name"</type></link> and <link linkend="DbusmenuGtkMenu--dbus-object"><type>"dbus-object"</type></link>.
</para>
<para>
	After creation the <link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> it will continue to keep in
	synchronization with the <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link> object across Dbus.  If the
	number of entries change, the menus change, if they change thier
	properties change, they update in the items.  All of this should
	be handled transparently to the user of this object.
</para>
</refsect1>
<refsect1 id="libdbusmenu-gtk-DbusmenuGtkMenu.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="DbusmenuGtkMenuClass" role="struct">
<title>struct DbusmenuGtkMenuClass</title>
<indexterm zone="DbusmenuGtkMenuClass"><primary>DbusmenuGtkMenuClass</primary></indexterm>
<programlisting>struct DbusmenuGtkMenuClass {
	GtkMenuClass parent_class;

	/*&lt; Private &gt;*/
	void (*reserved1) (void);
	void (*reserved2) (void);
	void (*reserved3) (void);
	void (*reserved4) (void);
	void (*reserved5) (void);
	void (*reserved6) (void);
};
</programlisting>
<para>
All of the subclassable functions and signal slots for a
<link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link>.
</para><variablelist role="struct">
<varlistentry><term><link linkend="GtkMenuClass"><type>GtkMenuClass</type></link>&#160;<structfield id="DbusmenuGtkMenuClass.parent-class">parent_class</structfield>;</term>
<listitem><simpara><link linkend="GtkMenuClass"><type>GtkMenuClass</type></link></simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved1">reserved1</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved2">reserved2</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved3">reserved3</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved4">reserved4</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved5">reserved5</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="DbusmenuGtkMenuClass.reserved6">reserved6</structfield>&#160;()</term>
<listitem><simpara>Reserved for future use.</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="dbusmenu-gtkmenu-new" role="function">
<title>dbusmenu_gtkmenu_new ()</title>
<indexterm zone="dbusmenu-gtkmenu-new"><primary>dbusmenu_gtkmenu_new</primary></indexterm>
<programlisting><link linkend="DbusmenuGtkMenu"><returnvalue>DbusmenuGtkMenu</returnvalue></link> *   dbusmenu_gtkmenu_new                (<parameter><link linkend="gchar"><type>gchar</type></link> *dbus_name</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *dbus_object</parameter>);</programlisting>
<para>
Creates a new <link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> object and creates a <link linkend="DbusmenuClient"><type>DbusmenuClient</type></link>
that connects across DBus to a <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>dbus_name</parameter>&#160;:</term>
<listitem><simpara>Name of the <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link> on DBus</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dbus_object</parameter>&#160;:</term>
<listitem><simpara>Name of the object on the <link linkend="DbusmenuServer"><type>DbusmenuServer</type></link></simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A new <link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> sync'd with a server</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbusmenu-gtkmenu-get-client" role="function">
<title>dbusmenu_gtkmenu_get_client ()</title>
<indexterm zone="dbusmenu-gtkmenu-get-client"><primary>dbusmenu_gtkmenu_get_client</primary></indexterm>
<programlisting><link linkend="DbusmenuGtkClient"><returnvalue>DbusmenuGtkClient</returnvalue></link> * dbusmenu_gtkmenu_get_client         (<parameter><link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> *menu</parameter>);</programlisting>
<para>
An accessor for the client that this menu is using to
communicate with the server.
</para><variablelist role="params">
<varlistentry><term><parameter>menu</parameter>&#160;:</term>
<listitem><simpara>The <link linkend="DbusmenuGtkMenu"><type>DbusmenuGtkMenu</type></link> to get the client from</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A valid <link linkend="DbusmenuGtkClient"><type>DbusmenuGtkClient</type></link> or NULL on error. <emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
